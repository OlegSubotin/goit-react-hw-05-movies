{"version":3,"file":"static/js/778.095a78d6.chunk.js","mappings":"iNACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA4F,4BAA5F,EAA+H,2BAA/H,EAAiK,2B,mBCwCjK,EAnCqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,gCACKF,EAAOG,OAAS,IACb,eAAIC,UAAWC,EAAf,SACKL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACR,eAAaL,UAAWC,EAAxB,UACI,UAAC,KAAD,CAAMD,UAAWC,EAAQK,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMX,EAASY,SAAWZ,EAASa,QAA1F,WACA,gBAAKC,IAAKN,EAAW,yCAAqCA,GAAgBO,EACtEC,IAAKT,EACLJ,UAAWC,KAEX,cAAGD,UAAWC,EAAd,SAAuBG,QANtBD,QAYT,IAAXP,GAAgBkB,IAAAA,OAAAA,KAAqB,iC,sJC1BlD,IAAMC,EAAQC,EAAQ,MAChBC,EAAM,mCACNC,EAAM,gCAECC,EAAkB,WAC3B,IAAMC,EAAG,UAAMF,EAAN,sCAAuCD,EAAvC,SAAmD,GAE5D,OADaF,EAAMM,IAAID,IAIpB,SAASE,EAAgBC,GAC5B,IAAMH,EAAG,UAAMF,EAAN,gCAAiCD,EAAjC,kBAA8CM,GAEvD,OADaR,EAAMM,IAAID,GAIpB,SAASI,EAAcC,GAC1B,IAAML,EAAG,UAAMF,EAAN,iBAAkBO,EAAlB,oBAAqCR,GAE9C,OADaF,EAAMM,IAAID,GAIpB,SAASM,EAAQD,GACpB,IAAML,EAAG,UAAMF,EAAN,iBAAkBO,EAAlB,4BAA6CR,GAEtD,OADaF,EAAMM,IAAID,GAIpB,SAASO,EAAWF,GACvB,IAAML,EAAG,UAAMF,EAAN,iBAAkBO,EAAlB,4BAA6CR,GAEtD,OADaF,EAAMM,IAAID,K,uHC7B3B,EAAwB,wB,SCKlBQ,EACI,OADJA,EAEO,UAFPA,EAGQ,WAHRA,EAIQ,WAGC,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlC,EAAP,KAAemC,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASF,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAeA,OAbEC,EAAAA,EAAAA,YAAU,WACNH,EAAUL,IACZT,EAAAA,EAAAA,MACGkB,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAAKE,KAAKC,QAAQvC,KAAI,kBAAiC,CAAEC,GAAnC,EAAGA,GAAoCE,YAAvC,EAAOA,YAA6CD,MAApD,EAAoBA,UAC5D2B,EAAUQ,GACVN,EAAUL,MACTc,OAAM,SAAAR,GACPC,EAASD,GACTD,EAAU,iBAEb,KAGH,gCACGD,IAAWJ,IAAe,eAAI5B,UAAWC,EAAf,qBAC1B+B,IAAWJ,IAAkB,SAACe,EAAA,EAAD,IAC7BX,IAAWJ,IAAmB,eAAI5B,UAAWC,EAAf,SAAyBiC,IACvDF,IAAWJ,GAAmBhC,IAAU,iCAAE,eAAII,UAAWC,EAAf,mCAAF,KAAqD,SAAC2C,EAAA,EAAD,CAAchD,OAAQA,Y","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.js","services/movie-api.js","webpack://goit-react-hw-05-movies/./src/views/HomeView/HomeView.module.css?053b","views/HomeView/HomeView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieGallery_list__tZ4SP\",\"item\":\"MovieGallery_item__4tR9S\",\"image\":\"MovieGallery_image__GR1sS\",\"text\":\"MovieGallery_text__r6Cf+\",\"link\":\"MovieGallery_link__CmVj8\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport s from './MovieGallery.module.css';\nimport movieImage from '../../images/movieImage.jpg';\n\nconst MovieGallery = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            {movies.length > 0 && (\n                <ul className={s.list}>\n                    {movies.map(({ id, title, poster_path }) => (\n                        <li key={id} className={s.item}>\n                            <Link className={s.link} to={`/movies/${id}`} state={{ from: location.pathname + location.search }}>\n                            <img src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : movieImage}\n                                alt={title}\n                                className={s.image}\n                            />\n                                <p className={s.text}>{title}</p>\n                                </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n            {movies === 0 && Notiflix.Notify.info('Sorry, there is no movie')}\n        </>\n    );\n};\n\nMovieGallery.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            poster_path: PropTypes.string,\n        })\n    )\n};\n\nexport default MovieGallery;\n\n\n\n","const axios = require('axios');\nconst KEY = 'd738edb014e8e3b583b9023797190025';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies=()=> {\n    const url = `${URL}trending/movie/day?api_key=${KEY}&page=${1}`;\n    const resp = axios.get(url);\n    return resp;\n};\n\nexport function getSearchMovie (movie) {\n    const url = `${URL}search/movie?api_key=${KEY}&query=${movie}`;\n    const resp = axios.get(url);\n    return resp;\n};\n\nexport function getMovieById (movieId) {\n    const url = `${URL}movie/${movieId}?api_key=${KEY}`;\n    const resp = axios.get(url);\n    return resp;\n};\n\nexport function getCast(movieId) {\n    const url = `${URL}movie/${movieId}/credits?api_key=${KEY}`;\n    const resp = axios.get(url);\n    return resp;\n};\n\nexport function getReviews(movieId) {\n    const url = `${URL}movie/${movieId}/reviews?api_key=${KEY}`;\n    const resp = axios.get(url);\n    return resp;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomeView_title__GXw8J\"};","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../services/movie-api';\nimport Loader from 'components/Loader/Loader.js';\nimport MovieGallery from 'components/MovieGallery';\nimport s from './HomeView.module.css';\n\nconst STATUS = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved',\n};\n\nexport default function HomeView() {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n      getTrendingMovies()\n        .then(resp => {\n          const newMovies = resp.data.results.map(({ id, poster_path, title }) => ({ id, poster_path, title, }));\n          setMovies(newMovies);\n          setStatus(STATUS.RESOLVED)\n        }).catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });  \n    }, []);\n\n  return (\n    <>\n      {status === STATUS.IDLE && <h1 className={s.title}>Welcome</h1>}\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.REJECTED && <h1 className={s.title}>{error}</h1>}\n      {status === STATUS.RESOLVED && movies && <><h1 className={s.title}>Today trending movies</h1> <MovieGallery movies={movies} /></>}\n    </>\n  );\n};"],"names":["movies","location","useLocation","length","className","s","map","id","title","poster_path","to","state","from","pathname","search","src","movieImage","alt","Notiflix","axios","require","KEY","URL","getTrendingMovies","url","get","getSearchMovie","movie","getMovieById","movieId","getCast","getReviews","STATUS","HomeView","useState","setMovies","status","setStatus","error","setError","useEffect","then","resp","newMovies","data","results","catch","Loader","MovieGallery"],"sourceRoot":""}